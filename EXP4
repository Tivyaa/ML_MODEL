from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
import random

data_iris = load_iris()
label_target = data_iris.target_names

print("Sample Data from Iris Dataset")
print("*" * 30)
for _ in range(10):
    rn = random.randint(0, 120)
    print(data_iris.data[rn], "===>", label_target[data_iris.target[rn]])

X, y = data_iris.data, data_iris.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)
print(f"Training dataset length: {len(X_train)}")
print(f"Testing dataset length: {len(X_test)}")

try:
    nn = int(input("Enter number of neighbors: "))
    knn = KNeighborsClassifier(n_neighbors=nn)
    knn.fit(X_train, y_train)

    print(f"The Score is: {knn.score(X_test, y_test)}")

    test_data = list(map(float, input("Enter Test Data : ").split(",")))
    predicted_class = knn.predict([test_data])
    print(f"Predicted output is: {label_target[predicted_class]}")
except ValueError:
    print("Please supply valid input...")


o/p
Enter number of neighbors: 10
The Score is: 0.9777777777777777
Enter Test Data : 6.2,2.6,3.4,0.6
Predicted output is: ['versicolor']
